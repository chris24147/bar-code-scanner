{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cropTo = exports.resizeMinTo = exports.resizeMaxTo = exports.resize = void 0;\nvar newCanvas = function () {\n  return document.createElement('canvas');\n};\nfunction resize(image, scale, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n  canvas.width = image.width * scale;\n  canvas.height = image.height * scale;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\nexports.resize = resize;\nfunction resizeMaxTo(image, maxSize, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n  var max = Math.max(image.width, image.height);\n  return resize(image, maxSize / max, canvas);\n}\nexports.resizeMaxTo = resizeMaxTo;\nfunction resizeMinTo(image, minSize, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n  var min = Math.min(image.width, image.height);\n  return resize(image, minSize / min, canvas);\n}\nexports.resizeMinTo = resizeMinTo;\nfunction cropTo(image, size, flipped, canvas) {\n  if (flipped === void 0) {\n    flipped = false;\n  }\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n  // image image, bitmap, or canvas\n  var width = image.width;\n  var height = image.height;\n  // if video element\n  if (image instanceof HTMLVideoElement) {\n    width = image.videoWidth;\n    height = image.videoHeight;\n  }\n  var min = Math.min(width, height);\n  var scale = size / min;\n  var scaledW = Math.ceil(width * scale);\n  var scaledH = Math.ceil(height * scale);\n  var dx = scaledW - size;\n  var dy = scaledH - size;\n  canvas.width = canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, ~~(dx / 2) * -1, ~~(dy / 2) * -1, scaledW, scaledH);\n  // canvas is already sized and cropped to center correctly\n  if (flipped) {\n    ctx.scale(-1, 1);\n    ctx.drawImage(canvas, size * -1, 0);\n  }\n  return canvas;\n}\nexports.cropTo = cropTo;","map":{"version":3,"names":["newCanvas","document","createElement","resize","image","scale","canvas","width","height","ctx","getContext","drawImage","exports","resizeMaxTo","maxSize","max","Math","resizeMinTo","minSize","min","cropTo","size","flipped","HTMLVideoElement","videoWidth","videoHeight","scaledW","ceil","scaledH","dx","dy"],"sources":["C:\\Users\\Chris Littlejohn\\Downloads\\barcode-matcher-final-project (1)\\node_modules\\@teachablemachine\\image\\src\\utils\\canvas.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\ntype Drawable = HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap;\n\nconst newCanvas = () => document.createElement('canvas');\n\nexport function resize(image: Drawable, scale: number, canvas: HTMLCanvasElement= newCanvas()) {\n    canvas.width = image.width * scale;\n    canvas.height = image.height * scale;\n    const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nexport function resizeMaxTo(image: Drawable, maxSize: number, canvas: HTMLCanvasElement= newCanvas()) {\n    const max = Math.max(image.width, image.height);\n    return resize(image, maxSize / max, canvas);\n}\n\nexport function resizeMinTo(image: Drawable, minSize: number, canvas: HTMLCanvasElement= newCanvas()) {\n    const min = Math.min(image.width, image.height);\n    return resize(image, minSize / min, canvas);\n}\n\n\nexport function cropTo( image: Drawable, size: number,\n    flipped = false, canvas: HTMLCanvasElement = newCanvas()) {\n\n    // image image, bitmap, or canvas\n    let width = image.width;\n    let height = image.height;\n\n    // if video element\n    if (image instanceof HTMLVideoElement) {\n        width = (image as HTMLVideoElement).videoWidth;\n        height = (image as HTMLVideoElement).videoHeight;\n    }\n\n    const min = Math.min(width, height);\n    const scale = size / min;\n    const scaledW = Math.ceil(width * scale);\n    const scaledH = Math.ceil(height * scale);\n    const dx = scaledW - size;\n    const dy = scaledH - size;\n    canvas.width = canvas.height = size;\n    const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n    ctx.drawImage(image, ~~(dx / 2) * -1, ~~(dy / 2) * -1, scaledW, scaledH);\n\n    // canvas is already sized and cropped to center correctly\n    if (flipped) {\n        ctx.scale(-1, 1);\n        ctx.drawImage(canvas, size * -1, 0);\n    }\n\n    return canvas;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAmBA,IAAMA,SAAS,GAAG,SAAAA,CAAA;EAAM,OAAAC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAAhC,CAAgC;AAExD,SAAgBC,MAAMA,CAACC,KAAe,EAAEC,KAAa,EAAEC,MAAsC;EAAtC,IAAAA,MAAA;IAAAA,MAAA,GAA2BN,SAAS,EAAE;EAAA;EACzFM,MAAM,CAACC,KAAK,GAAGH,KAAK,CAACG,KAAK,GAAGF,KAAK;EAClCC,MAAM,CAACE,MAAM,GAAGJ,KAAK,CAACI,MAAM,GAAGH,KAAK;EACpC,IAAMI,GAAG,GAA6BH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAE;EAE9DD,GAAG,CAACE,SAAS,CAACP,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEE,MAAM,CAACC,KAAK,EAAED,MAAM,CAACE,MAAM,CAAC;EACvD,OAAOF,MAAM;AACjB;AAPAM,OAAA,CAAAT,MAAA,GAAAA,MAAA;AASA,SAAgBU,WAAWA,CAACT,KAAe,EAAEU,OAAe,EAAER,MAAsC;EAAtC,IAAAA,MAAA;IAAAA,MAAA,GAA2BN,SAAS,EAAE;EAAA;EAChG,IAAMe,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACX,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,MAAM,CAAC;EAC/C,OAAOL,MAAM,CAACC,KAAK,EAAEU,OAAO,GAAGC,GAAG,EAAET,MAAM,CAAC;AAC/C;AAHAM,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAKA,SAAgBI,WAAWA,CAACb,KAAe,EAAEc,OAAe,EAAEZ,MAAsC;EAAtC,IAAAA,MAAA;IAAAA,MAAA,GAA2BN,SAAS,EAAE;EAAA;EAChG,IAAMmB,GAAG,GAAGH,IAAI,CAACG,GAAG,CAACf,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,MAAM,CAAC;EAC/C,OAAOL,MAAM,CAACC,KAAK,EAAEc,OAAO,GAAGC,GAAG,EAAEb,MAAM,CAAC;AAC/C;AAHAM,OAAA,CAAAK,WAAA,GAAAA,WAAA;AAMA,SAAgBG,MAAMA,CAAEhB,KAAe,EAAEiB,IAAY,EACjDC,OAAe,EAAEhB,MAAuC;EAAxD,IAAAgB,OAAA;IAAAA,OAAA,QAAe;EAAA;EAAE,IAAAhB,MAAA;IAAAA,MAAA,GAA4BN,SAAS,EAAE;EAAA;EAExD;EACA,IAAIO,KAAK,GAAGH,KAAK,CAACG,KAAK;EACvB,IAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EAEzB;EACA,IAAIJ,KAAK,YAAYmB,gBAAgB,EAAE;IACnChB,KAAK,GAAIH,KAA0B,CAACoB,UAAU;IAC9ChB,MAAM,GAAIJ,KAA0B,CAACqB,WAAW;;EAGpD,IAAMN,GAAG,GAAGH,IAAI,CAACG,GAAG,CAACZ,KAAK,EAAEC,MAAM,CAAC;EACnC,IAAMH,KAAK,GAAGgB,IAAI,GAAGF,GAAG;EACxB,IAAMO,OAAO,GAAGV,IAAI,CAACW,IAAI,CAACpB,KAAK,GAAGF,KAAK,CAAC;EACxC,IAAMuB,OAAO,GAAGZ,IAAI,CAACW,IAAI,CAACnB,MAAM,GAAGH,KAAK,CAAC;EACzC,IAAMwB,EAAE,GAAGH,OAAO,GAAGL,IAAI;EACzB,IAAMS,EAAE,GAAGF,OAAO,GAAGP,IAAI;EACzBf,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACE,MAAM,GAAGa,IAAI;EACnC,IAAMZ,GAAG,GAA6BH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EAC7DD,GAAG,CAACE,SAAS,CAACP,KAAK,EAAE,CAAC,EAAEyB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEJ,OAAO,EAAEE,OAAO,CAAC;EAExE;EACA,IAAIN,OAAO,EAAE;IACTb,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAChBI,GAAG,CAACE,SAAS,CAACL,MAAM,EAAEe,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;EAGvC,OAAOf,MAAM;AACjB;AA9BAM,OAAA,CAAAQ,MAAA,GAAAA,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}