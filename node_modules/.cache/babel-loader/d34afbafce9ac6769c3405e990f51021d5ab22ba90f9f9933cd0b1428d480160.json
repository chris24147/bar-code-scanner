{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{BrowserQRCodeReader}from\"@zxing/library\";import*as tmImage from\"@teachablemachine/image\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function BarcodePartMatcher(){const[step,setStep]=useState(0);const[qrText,setQRText]=useState(\"\");const[predictedClass,setPredictedClass]=useState(\"\");const[result,setResult]=useState(\"\");const[capturedImage,setCapturedImage]=useState(null);const videoRef=useRef(null);const canvasRef=useRef(null);const modelRef=useRef(null);const qrReaderRef=useRef(null);const resetApp=()=>{setStep(0);setQRText(\"\");setPredictedClass(\"\");setResult(\"\");setCapturedImage(null);if(qrReaderRef.current){qrReaderRef.current.reset();}stopCamera();};const getCameraStream=async()=>{try{const constraints={video:{facingMode:{exact:\"environment\"},width:{ideal:1920},height:{ideal:1080}},audio:false};return await navigator.mediaDevices.getUserMedia(constraints);}catch(error){return await navigator.mediaDevices.getUserMedia({video:{facingMode:\"environment\"},audio:false});}};const stopCamera=()=>{const video=videoRef.current;if(video&&video.srcObject){video.srcObject.getTracks().forEach(track=>track.stop());video.srcObject=null;}};const startQRScanner=async()=>{setStep(1);await new Promise(resolve=>{const check=()=>{if(videoRef.current)resolve();else setTimeout(check,50);};check();});const videoElement=videoRef.current;try{stopCamera();const stream=await getCameraStream();videoElement.srcObject=stream;videoElement.setAttribute(\"playsinline\",\"true\");videoElement.setAttribute(\"autoplay\",\"true\");videoElement.setAttribute(\"muted\",\"true\");videoElement.muted=true;await videoElement.play();const qrReader=new BrowserQRCodeReader();qrReaderRef.current=qrReader;const devices=await BrowserQRCodeReader.listVideoInputDevices();const rearCamera=devices.find(device=>device.label.toLowerCase().includes(\"back\"))||devices[0];qrReader.decodeFromVideoDevice(rearCamera.deviceId,videoElement,(result,err)=>{if(result){setQRText(result.getText());qrReader.reset();stopCamera();setStep(2);}});}catch(error){alert(\"Failed to access camera: \"+error.message);console.error(\"QR scanning failed:\",error);}};const startPartCamera=async()=>{const videoElement=videoRef.current;try{stopCamera();const stream=await getCameraStream();videoElement.srcObject=stream;videoElement.setAttribute(\"playsinline\",\"true\");videoElement.setAttribute(\"autoplay\",\"true\");videoElement.setAttribute(\"muted\",\"true\");videoElement.muted=true;await videoElement.play();await new Promise(resolve=>{videoElement.onloadedmetadata=()=>resolve();});}catch(error){console.error(\"Camera access for part photo failed:\",error);}};const loadModel=async()=>{try{const URL=\"/model\";const modelURL=URL+\"/model.json\";const metadataURL=URL+\"/metadata.json\";const model=await tmImage.load(modelURL,metadataURL);modelRef.current=model;}catch(error){console.error(\"Model load failed:\",error);}};const capturePartImage=async()=>{const video=videoRef.current;const canvas=canvasRef.current;if(!video||!canvas||!video.videoWidth||!video.videoHeight)return;const context=canvas.getContext(\"2d\");canvas.width=video.videoWidth;canvas.height=video.videoHeight;context.drawImage(video,0,0,canvas.width,canvas.height);const imageDataURL=canvas.toDataURL(\"image/png\");setCapturedImage(imageDataURL);const image=new Image();image.src=imageDataURL;await new Promise(resolve=>image.onload=resolve);try{const prediction=await modelRef.current.predict(image);const top=prediction.sort((a,b)=>b.probability-a.probability)[0];setPredictedClass(top.className);setResult(top.className===qrText?\"Match\":\"Incorrect\");}catch(error){console.error(\"Prediction failed:\",error);}stopCamera();setStep(3);};useEffect(()=>{loadModel();},[]);useEffect(()=>{if(step===2){startPartCamera();}},[step]);const resultClass=result===\"Match\"?\"bg-green-200\":result===\"Incorrect\"?\"bg-red-200\":\"\";return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-md mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"QR Code-Part Matcher\"}),step===0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-4\",children:\"Welcome. Press start to begin QR code scanning.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 text-white rounded\",onClick:startQRScanner,children:\"Start\"})]}),step===1&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2\",children:\"Step 1: Scan QR Code\"}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"w-full h-auto border\",style:{filter:\"contrast(1.2) brightness(1.1)\"},autoPlay:true,playsInline:true,muted:true})]}),step===2&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2\",children:\"Step 2: Take a photo of the part\"}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"w-full h-auto border mb-2\",autoPlay:true,playsInline:true,muted:true}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-green-600 text-white rounded\",onClick:capturePartImage,children:\"Capture Part Photo\"}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"hidden\"})]}),step===3&&/*#__PURE__*/_jsxs(\"div\",{className:`p-4 rounded ${resultClass}`,children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-semibold\",children:[\"Result: \",result]}),capturedImage&&/*#__PURE__*/_jsx(\"img\",{src:capturedImage,alt:\"Captured Part\",className:\"w-full mt-2 border\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-2\",children:[\"QR Code: \",qrText]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Predicted Class: \",predictedClass]}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\",onClick:resetApp,children:\"Reset\"})]})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","BrowserQRCodeReader","tmImage","jsx","_jsx","jsxs","_jsxs","BarcodePartMatcher","step","setStep","qrText","setQRText","predictedClass","setPredictedClass","result","setResult","capturedImage","setCapturedImage","videoRef","canvasRef","modelRef","qrReaderRef","resetApp","current","reset","stopCamera","getCameraStream","constraints","video","facingMode","exact","width","ideal","height","audio","navigator","mediaDevices","getUserMedia","error","srcObject","getTracks","forEach","track","stop","startQRScanner","Promise","resolve","check","setTimeout","videoElement","stream","setAttribute","muted","play","qrReader","devices","listVideoInputDevices","rearCamera","find","device","label","toLowerCase","includes","decodeFromVideoDevice","deviceId","err","getText","alert","message","console","startPartCamera","onloadedmetadata","loadModel","URL","modelURL","metadataURL","model","load","capturePartImage","canvas","videoWidth","videoHeight","context","getContext","drawImage","imageDataURL","toDataURL","image","Image","src","onload","prediction","predict","top","sort","a","b","probability","className","resultClass","children","onClick","ref","style","filter","autoPlay","playsInline","alt"],"sources":["C:/Users/Chris Littlejohn/Downloads/barcode-matcher-final-project (1)/src/BarcodePartMatcher.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { BrowserQRCodeReader } from \"@zxing/library\";\nimport * as tmImage from \"@teachablemachine/image\";\n\nexport default function BarcodePartMatcher() {\n  const [step, setStep] = useState(0);\n  const [qrText, setQRText] = useState(\"\");\n  const [predictedClass, setPredictedClass] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [capturedImage, setCapturedImage] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modelRef = useRef(null);\n  const qrReaderRef = useRef(null);\n\n  const resetApp = () => {\n    setStep(0);\n    setQRText(\"\");\n    setPredictedClass(\"\");\n    setResult(\"\");\n    setCapturedImage(null);\n    if (qrReaderRef.current) {\n      qrReaderRef.current.reset();\n    }\n    stopCamera();\n  };\n\n  const getCameraStream = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: { exact: \"environment\" },\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n        },\n        audio: false,\n      };\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (error) {\n      return await navigator.mediaDevices.getUserMedia({\n        video: { facingMode: \"environment\" },\n        audio: false,\n      });\n    }\n  };\n\n  const stopCamera = () => {\n    const video = videoRef.current;\n    if (video && video.srcObject) {\n      video.srcObject.getTracks().forEach((track) => track.stop());\n      video.srcObject = null;\n    }\n  };\n\n  const startQRScanner = async () => {\n    setStep(1);\n    await new Promise((resolve) => {\n      const check = () => {\n        if (videoRef.current) resolve();\n        else setTimeout(check, 50);\n      };\n      check();\n    });\n\n    const videoElement = videoRef.current;\n\n    try {\n      stopCamera();\n      const stream = await getCameraStream();\n      videoElement.srcObject = stream;\n\n      videoElement.setAttribute(\"playsinline\", \"true\");\n      videoElement.setAttribute(\"autoplay\", \"true\");\n      videoElement.setAttribute(\"muted\", \"true\");\n      videoElement.muted = true;\n\n      await videoElement.play();\n\n      const qrReader = new BrowserQRCodeReader();\n      qrReaderRef.current = qrReader;\n\n      const devices = await BrowserQRCodeReader.listVideoInputDevices();\n      const rearCamera =\n        devices.find((device) =>\n          device.label.toLowerCase().includes(\"back\")\n        ) || devices[0];\n\n      qrReader.decodeFromVideoDevice(\n        rearCamera.deviceId,\n        videoElement,\n        (result, err) => {\n          if (result) {\n            setQRText(result.getText());\n            qrReader.reset();\n            stopCamera();\n            setStep(2);\n          }\n        }\n      );\n    } catch (error) {\n      alert(\"Failed to access camera: \" + error.message);\n      console.error(\"QR scanning failed:\", error);\n    }\n  };\n\n  const startPartCamera = async () => {\n    const videoElement = videoRef.current;\n\n    try {\n      stopCamera();\n      const stream = await getCameraStream();\n      videoElement.srcObject = stream;\n\n      videoElement.setAttribute(\"playsinline\", \"true\");\n      videoElement.setAttribute(\"autoplay\", \"true\");\n      videoElement.setAttribute(\"muted\", \"true\");\n      videoElement.muted = true;\n\n      await videoElement.play();\n\n      await new Promise((resolve) => {\n        videoElement.onloadedmetadata = () => resolve();\n      });\n    } catch (error) {\n      console.error(\"Camera access for part photo failed:\", error);\n    }\n  };\n\n  const loadModel = async () => {\n    try {\n      const URL = \"/model\";\n      const modelURL = URL + \"/model.json\";\n      const metadataURL = URL + \"/metadata.json\";\n      const model = await tmImage.load(modelURL, metadataURL);\n      modelRef.current = model;\n    } catch (error) {\n      console.error(\"Model load failed:\", error);\n    }\n  };\n\n  const capturePartImage = async () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    if (!video || !canvas || !video.videoWidth || !video.videoHeight) return;\n\n    const context = canvas.getContext(\"2d\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const imageDataURL = canvas.toDataURL(\"image/png\");\n    setCapturedImage(imageDataURL);\n\n    const image = new Image();\n    image.src = imageDataURL;\n    await new Promise((resolve) => (image.onload = resolve));\n\n    try {\n      const prediction = await modelRef.current.predict(image);\n      const top = prediction.sort((a, b) => b.probability - a.probability)[0];\n      setPredictedClass(top.className);\n      setResult(top.className === qrText ? \"Match\" : \"Incorrect\");\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n    }\n\n    stopCamera();\n    setStep(3);\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  useEffect(() => {\n    if (step === 2) {\n      startPartCamera();\n    }\n  }, [step]);\n\n  const resultClass =\n    result === \"Match\" ? \"bg-green-200\" : result === \"Incorrect\" ? \"bg-red-200\" : \"\";\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">QR Code-Part Matcher</h1>\n\n      {step === 0 && (\n        <div>\n          <p className=\"mb-4\">Welcome. Press start to begin QR code scanning.</p>\n          <button\n            className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n            onClick={startQRScanner}\n          >\n            Start\n          </button>\n        </div>\n      )}\n\n      {step === 1 && (\n        <div>\n          <p className=\"mb-2\">Step 1: Scan QR Code</p>\n          <video\n            ref={videoRef}\n            className=\"w-full h-auto border\"\n            style={{ filter: \"contrast(1.2) brightness(1.1)\" }}\n            autoPlay\n            playsInline\n            muted\n          />\n        </div>\n      )}\n\n      {step === 2 && (\n        <div>\n          <p className=\"mb-2\">Step 2: Take a photo of the part</p>\n          <video\n            ref={videoRef}\n            className=\"w-full h-auto border mb-2\"\n            autoPlay\n            playsInline\n            muted\n          />\n          <button\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\n            onClick={capturePartImage}\n          >\n            Capture Part Photo\n          </button>\n          <canvas ref={canvasRef} className=\"hidden\" />\n        </div>\n      )}\n\n      {step === 3 && (\n        <div className={`p-4 rounded ${resultClass}`}>\n          <p className=\"text-lg font-semibold\">Result: {result}</p>\n          {capturedImage && (\n            <img\n              src={capturedImage}\n              alt=\"Captured Part\"\n              className=\"w-full mt-2 border\"\n            />\n          )}\n          <p className=\"text-sm text-gray-600 mt-2\">QR Code: {qrText}</p>\n          <p className=\"text-sm text-gray-600\">Predicted Class: {predictedClass}</p>\n          <button\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\"\n            onClick={resetApp}\n          >\n            Reset\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}