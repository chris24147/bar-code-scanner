{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{BrowserMultiFormatReader}from\"@zxing/browser\";import*as tmImage from\"@teachablemachine/image\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function BarcodePartMatcher(){const[step,setStep]=useState(0);const[qrText,setQRText]=useState(\"\");const[predictedClass,setPredictedClass]=useState(\"\");const[result,setResult]=useState(\"\");const[capturedImage,setCapturedImage]=useState(null);const videoRef=useRef(null);const canvasRef=useRef(null);const modelRef=useRef(null);const resetApp=()=>{setStep(0);setQRText(\"\");setPredictedClass(\"\");setResult(\"\");setCapturedImage(null);};const getCameraStream=async()=>{try{const constraints={video:{facingMode:{exact:\"environment\"},width:{ideal:1280},height:{ideal:720}},audio:false};return await navigator.mediaDevices.getUserMedia(constraints);}catch(error){return await navigator.mediaDevices.getUserMedia({video:{facingMode:\"environment\"},audio:false});}};const stopCamera=()=>{const video=videoRef.current;if(video&&video.srcObject){video.srcObject.getTracks().forEach(track=>track.stop());video.srcObject=null;}};const startQRScanner=async()=>{setStep(1);await new Promise(resolve=>{const check=()=>{if(videoRef.current)resolve();else setTimeout(check,50);};check();});const videoElement=videoRef.current;stopCamera();try{const stream=await getCameraStream();videoElement.srcObject=stream;videoElement.setAttribute(\"playsinline\",\"true\");videoElement.setAttribute(\"autoplay\",\"true\");videoElement.setAttribute(\"muted\",\"true\");videoElement.muted=true;await videoElement.play();const codeReader=new BrowserMultiFormatReader();let scanned=false;const scanLoop=async()=>{if(scanned||!videoElement)return;try{const result=await codeReader.decodeOnceFromVideoElement(videoElement);if(result){scanned=true;setQRText(result.getText());stopCamera();setStep(2);}}catch(err){requestAnimationFrame(scanLoop);// keep retrying\n}};scanLoop();}catch(error){alert(\"Failed to access camera: \"+error.message);console.error(\"QR scanning failed:\",error);}};const startPartCamera=async()=>{const videoElement=videoRef.current;try{stopCamera();const stream=await getCameraStream();videoElement.srcObject=stream;videoElement.setAttribute(\"playsinline\",\"true\");videoElement.setAttribute(\"autoplay\",\"true\");videoElement.setAttribute(\"muted\",\"true\");videoElement.muted=true;await videoElement.play();await new Promise(resolve=>{videoElement.onloadedmetadata=()=>resolve();});}catch(error){console.error(\"Camera access for part photo failed:\",error);}};const loadModel=async()=>{try{const URL=\"/model\";const modelURL=URL+\"/model.json\";const metadataURL=URL+\"/metadata.json\";const model=await tmImage.load(modelURL,metadataURL);modelRef.current=model;}catch(error){console.error(\"Model load failed:\",error);}};const capturePartImage=async()=>{const video=videoRef.current;const canvas=canvasRef.current;if(!video||!canvas||!video.videoWidth||!video.videoHeight)return;const context=canvas.getContext(\"2d\");canvas.width=video.videoWidth;canvas.height=video.videoHeight;context.drawImage(video,0,0,canvas.width,canvas.height);const imageDataURL=canvas.toDataURL(\"image/png\");setCapturedImage(imageDataURL);const image=new Image();image.src=imageDataURL;await new Promise(resolve=>image.onload=resolve);try{const prediction=await modelRef.current.predict(image);const top=prediction.sort((a,b)=>b.probability-a.probability)[0];setPredictedClass(top.className);setResult(top.className===qrText?\"Match\":\"Incorrect\");}catch(error){console.error(\"Prediction failed:\",error);}stopCamera();setStep(3);};useEffect(()=>{loadModel();},[]);useEffect(()=>{if(step===2){startPartCamera();}},[step]);const resultClass=result===\"Match\"?\"bg-green-200\":result===\"Incorrect\"?\"bg-red-200\":\"\";return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-md mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"QR Code-Part Matcher\"}),step===0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-4\",children:\"Welcome. Press start to begin QR code scanning.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 text-white rounded\",onClick:startQRScanner,children:\"Start\"})]}),step===1&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2\",children:\"Step 1: Scan QR Code\"}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"w-full h-auto border\",autoPlay:true,playsInline:true,muted:true})]}),step===2&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2\",children:\"Step 2: Take a photo of the part\"}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"w-full h-auto border mb-2\",autoPlay:true,playsInline:true,muted:true}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-green-600 text-white rounded\",onClick:capturePartImage,children:\"Capture Part Photo\"}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"hidden\"})]}),step===3&&/*#__PURE__*/_jsxs(\"div\",{className:`p-4 rounded ${resultClass}`,children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-semibold\",children:[\"Result: \",result]}),capturedImage&&/*#__PURE__*/_jsx(\"img\",{src:capturedImage,alt:\"Captured Part\",className:\"w-full mt-2 border\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-2\",children:[\"QR Code: \",qrText]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Predicted Class: \",predictedClass]}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\",onClick:resetApp,children:\"Reset\"})]})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","BrowserMultiFormatReader","tmImage","jsx","_jsx","jsxs","_jsxs","BarcodePartMatcher","step","setStep","qrText","setQRText","predictedClass","setPredictedClass","result","setResult","capturedImage","setCapturedImage","videoRef","canvasRef","modelRef","resetApp","getCameraStream","constraints","video","facingMode","exact","width","ideal","height","audio","navigator","mediaDevices","getUserMedia","error","stopCamera","current","srcObject","getTracks","forEach","track","stop","startQRScanner","Promise","resolve","check","setTimeout","videoElement","stream","setAttribute","muted","play","codeReader","scanned","scanLoop","decodeOnceFromVideoElement","getText","err","requestAnimationFrame","alert","message","console","startPartCamera","onloadedmetadata","loadModel","URL","modelURL","metadataURL","model","load","capturePartImage","canvas","videoWidth","videoHeight","context","getContext","drawImage","imageDataURL","toDataURL","image","Image","src","onload","prediction","predict","top","sort","a","b","probability","className","resultClass","children","onClick","ref","autoPlay","playsInline","alt"],"sources":["C:/Users/Chris Littlejohn/Downloads/barcode-matcher-final-project (1)/src/BarcodePartMatcher.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\nimport * as tmImage from \"@teachablemachine/image\";\n\nexport default function BarcodePartMatcher() {\n  const [step, setStep] = useState(0);\n  const [qrText, setQRText] = useState(\"\");\n  const [predictedClass, setPredictedClass] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [capturedImage, setCapturedImage] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modelRef = useRef(null);\n\n  const resetApp = () => {\n    setStep(0);\n    setQRText(\"\");\n    setPredictedClass(\"\");\n    setResult(\"\");\n    setCapturedImage(null);\n  };\n\n  const getCameraStream = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: { exact: \"environment\" },\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n        },\n        audio: false,\n      };\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (error) {\n      return await navigator.mediaDevices.getUserMedia({\n        video: { facingMode: \"environment\" },\n        audio: false,\n      });\n    }\n  };\n\n  const stopCamera = () => {\n    const video = videoRef.current;\n    if (video && video.srcObject) {\n      video.srcObject.getTracks().forEach((track) => track.stop());\n      video.srcObject = null;\n    }\n  };\n\n  const startQRScanner = async () => {\n    setStep(1);\n\n    await new Promise((resolve) => {\n      const check = () => {\n        if (videoRef.current) resolve();\n        else setTimeout(check, 50);\n      };\n      check();\n    });\n\n    const videoElement = videoRef.current;\n    stopCamera();\n\n    try {\n      const stream = await getCameraStream();\n      videoElement.srcObject = stream;\n      videoElement.setAttribute(\"playsinline\", \"true\");\n      videoElement.setAttribute(\"autoplay\", \"true\");\n      videoElement.setAttribute(\"muted\", \"true\");\n      videoElement.muted = true;\n      await videoElement.play();\n\n      const codeReader = new BrowserMultiFormatReader();\n      let scanned = false;\n\n      const scanLoop = async () => {\n        if (scanned || !videoElement) return;\n        try {\n          const result = await codeReader.decodeOnceFromVideoElement(videoElement);\n          if (result) {\n            scanned = true;\n            setQRText(result.getText());\n            stopCamera();\n            setStep(2);\n          }\n        } catch (err) {\n          requestAnimationFrame(scanLoop); // keep retrying\n        }\n      };\n\n      scanLoop();\n    } catch (error) {\n      alert(\"Failed to access camera: \" + error.message);\n      console.error(\"QR scanning failed:\", error);\n    }\n  };\n\n  const startPartCamera = async () => {\n    const videoElement = videoRef.current;\n\n    try {\n      stopCamera();\n      const stream = await getCameraStream();\n      videoElement.srcObject = stream;\n      videoElement.setAttribute(\"playsinline\", \"true\");\n      videoElement.setAttribute(\"autoplay\", \"true\");\n      videoElement.setAttribute(\"muted\", \"true\");\n      videoElement.muted = true;\n\n      await videoElement.play();\n      await new Promise((resolve) => {\n        videoElement.onloadedmetadata = () => resolve();\n      });\n    } catch (error) {\n      console.error(\"Camera access for part photo failed:\", error);\n    }\n  };\n\n  const loadModel = async () => {\n    try {\n      const URL = \"/model\";\n      const modelURL = URL + \"/model.json\";\n      const metadataURL = URL + \"/metadata.json\";\n      const model = await tmImage.load(modelURL, metadataURL);\n      modelRef.current = model;\n    } catch (error) {\n      console.error(\"Model load failed:\", error);\n    }\n  };\n\n  const capturePartImage = async () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    if (!video || !canvas || !video.videoWidth || !video.videoHeight) return;\n\n    const context = canvas.getContext(\"2d\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const imageDataURL = canvas.toDataURL(\"image/png\");\n    setCapturedImage(imageDataURL);\n\n    const image = new Image();\n    image.src = imageDataURL;\n    await new Promise((resolve) => (image.onload = resolve));\n\n    try {\n      const prediction = await modelRef.current.predict(image);\n      const top = prediction.sort((a, b) => b.probability - a.probability)[0];\n      setPredictedClass(top.className);\n      setResult(top.className === qrText ? \"Match\" : \"Incorrect\");\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n    }\n\n    stopCamera();\n    setStep(3);\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  useEffect(() => {\n    if (step === 2) {\n      startPartCamera();\n    }\n  }, [step]);\n\n  const resultClass =\n    result === \"Match\" ? \"bg-green-200\" : result === \"Incorrect\" ? \"bg-red-200\" : \"\";\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">QR Code-Part Matcher</h1>\n\n      {step === 0 && (\n        <div>\n          <p className=\"mb-4\">Welcome. Press start to begin QR code scanning.</p>\n          <button\n            className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n            onClick={startQRScanner}\n          >\n            Start\n          </button>\n        </div>\n      )}\n\n      {step === 1 && (\n        <div>\n          <p className=\"mb-2\">Step 1: Scan QR Code</p>\n          <video\n            ref={videoRef}\n            className=\"w-full h-auto border\"\n            autoPlay\n            playsInline\n            muted\n          />\n        </div>\n      )}\n\n      {step === 2 && (\n        <div>\n          <p className=\"mb-2\">Step 2: Take a photo of the part</p>\n          <video\n            ref={videoRef}\n            className=\"w-full h-auto border mb-2\"\n            autoPlay\n            playsInline\n            muted\n          />\n          <button\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\n            onClick={capturePartImage}\n          >\n            Capture Part Photo\n          </button>\n          <canvas ref={canvasRef} className=\"hidden\" />\n        </div>\n      )}\n\n      {step === 3 && (\n        <div className={`p-4 rounded ${resultClass}`}>\n          <p className=\"text-lg font-semibold\">Result: {result}</p>\n          {capturedImage && (\n            <img\n              src={capturedImage}\n              alt=\"Captured Part\"\n              className=\"w-full mt-2 border\"\n            />\n          )}\n          <p className=\"text-sm text-gray-600 mt-2\">QR Code: {qrText}</p>\n          <p className=\"text-sm text-gray-600\">Predicted Class: {predictedClass}</p>\n          <button\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\"\n            onClick={resetApp}\n          >\n            Reset\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}